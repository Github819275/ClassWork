ArrayNodes = [[-1, -1, -1] for i in range(20)]  # DECLARE ArrayNodes[0:2, 0:19]
RootPointer = -1  # DECLARE RootPointer: INTEGER
FreeNode = 0  # DECLARE FreeNode : INTEGER


def AddNode(ArrayNodes, Root, Free):
    NodeData = int(input('Enter the data: '))
    if Free <= 19:
        ArrayNodes[Free][0] = -1
        ArrayNodes[Free][1] = NodeData
        ArrayNodes[Free][2] = -1
        if Root == -1:
            Root = 0
        else:
            Placed = False
            CurrentNode = Root
            while Placed == False:
                if NodeData < ArrayNodes[CurrentNode][1]:
                    if ArrayNodes[CurrentNode][0] == -1:
                        ArrayNodes[CurrentNode][0] = Free
                        Placed = True
                    else:
                        CurrentNode = ArrayNodes[CurrentNode][0]
                else:
                    if ArrayNodes[CurrentNode][2] == -1:
                        ArrayNodes[CurrentNode][2] = Free
                        Placed = True
                    else:
                        CurrentNode = ArrayNodes[CurrentNode][2]

        Free = Free + 1
    else:
        print('Tree is full')
    return Root, Free


def PrintAll():
    for i in range(20):
        print(ArrayNodes[i][0], ' ', ArrayNodes[i][1], ' ', ArrayNodes[i][2])


def InOrder(rootPtr):
    if rootPtr != -1:
        InOrder(ArrayNodes[rootPtr][0])
        print(ArrayNodes[rootPtr][1], end=',')
        InOrder(ArrayNodes[rootPtr][2])


# Main Program
for j in range(10):
    RootPointer, FreeNode = AddNode(ArrayNodes, RootPointer, FreeNode)
PrintAll()

InOrder(RootPointer)
