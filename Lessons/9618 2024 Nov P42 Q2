class Queue:
    def __init__(self):
        self.QueueArray = [0 for k in range(100)]  # DECLARE QueueArray[0:99] : INTEGER
        self.Headpointer = 0  # DECLARE Headpointer : INTEGER
        self.Tailpointer = 0  # DECLARE Tailpointer : INTEGER


def Enqueue(AQueue, TheData):
    if AQueue.Headpointer == -1:
        AQueue.QueueArray[AQueue.Tailpointer] = TheData
        AQueue.Headpointer = 0
        AQueue.Tailpointer = AQueue.Tailpointer + 1
        return AQueue, 1
    else:
        if AQueue.Tailpointer > 99:
            return AQueue, -1
        else:
            AQueue.QueueArray[AQueue.Tailpointer] = TheData
            AQueue.Tailpointer = AQueue.Tailpointer + 1
            return AQueue, 1


def ReturnAllData():
    line = ''
    current = TheQueue.Headpointer
    while current != TheQueue.Tailpointer:
        line = line + str(TheQueue.QueueArray[current]) + ' '
        current += 1
    return line


def Dequeue(AQueue):
    if AQueue.Headpointer == -1:
        return -1
    AQueue.Headpointer = AQueue.Headpointer + 1
    return AQueue.QueueArray[AQueue.Headpointer - 1]


# Main Program
TheQueue = Queue()
TheQueue.Headpointer = -1
TheQueue.Tailpointer = 0
for i in range(100):
    TheQueue.QueueArray[i] = -1

for i in range(10):
    value = int(input('Enter Value, 0 or greater: '))
    while value < 0:
        print('Value should be above 0. Re-enter: ')
        value = int(input('Enter Value, 0 or greater: '))

    TheQueue, status = Enqueue(TheQueue, value)
    if status == -1:
        print('Queue is full.')
    else:
        print('Data has been added.')
answer = ReturnAllData()
print(answer)

x = Dequeue(TheQueue)
if x == -1:
    print('Queue is empty')
else:
    print(x)

y = Dequeue(TheQueue)
if y == -1:
    print('Queue is empty')
else:
    print(y)
answer = ReturnAllData()
print(answer)
